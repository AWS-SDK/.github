import {request} from "node:https";
const repos = ["client-accessanalyzer","client-account","client-acm-pca","client-acm","client-aiops","client-amp","client-amplify","client-amplifybackend","client-amplifyuibuilder","client-api-gateway","client-apigatewaymanagementapi","client-apigatewayv2","client-app-mesh","client-appconfig","client-appconfigdata","client-appfabric","client-appflow","client-appintegrations","client-application-auto-scaling","client-application-discovery-service","client-application-insights","client-application-signals","client-applicationcostprofiler","client-apprunner","client-appstream","client-appsync","client-apptest","client-arc-zonal-shift","client-artifact","client-athena","client-auditmanager","client-auto-scaling-plans","client-auto-scaling","client-b2bi","client-backup-gateway","client-backup","client-backupsearch","client-batch","client-bcm-data-exports","client-bcm-pricing-calculator","client-bedrock-agent-runtime","client-bedrock-agent","client-bedrock-data-automation-runtime","client-bedrock-data-automation","client-bedrock-runtime","client-bedrock","client-billing","client-billingconductor","client-braket","client-budgets","client-chatbot","client-chime-sdk-identity","client-chime-sdk-media-pipelines","client-chime-sdk-meetings","client-chime-sdk-messaging","client-chime-sdk-voice","client-chime","client-cleanrooms","client-cleanroomsml","client-cloud9","client-cloudcontrol","client-clouddirectory","client-cloudformation","client-cloudfront-keyvaluestore","client-cloudfront","client-cloudhsm-v2","client-cloudhsm","client-cloudsearch-domain","client-cloudsearch","client-cloudtrail-data","client-cloudtrail","client-cloudwatch-events","client-cloudwatch-logs","client-cloudwatch","client-codeartifact","client-codebuild","client-codecatalyst","client-codecommit","client-codeconnections","client-codedeploy","client-codeguru-reviewer","client-codeguru-security","client-codeguruprofiler","client-codepipeline","client-codestar-connections","client-codestar-notifications","client-cognito-identity-provider","client-cognito-identity","client-cognito-sync","client-comprehend","client-comprehendmedical","client-compute-optimizer","client-config-service","client-connect-contact-lens","client-connect","client-connectcampaigns","client-connectcampaignsv2","client-connectcases","client-connectparticipant","client-controlcatalog","client-accessanalyzer","client-account","client-acm-pca","client-acm","client-aiops","client-amp","client-amplify","client-amplifybackend","client-amplifyuibuilder","client-api-gateway","client-apigatewaymanagementapi","client-apigatewayv2","client-app-mesh","client-appconfig","client-appconfigdata","client-appfabric","client-appflow","client-appintegrations","client-application-auto-scaling","client-application-discovery-service","client-application-insights","client-application-signals","client-applicationcostprofiler","client-apprunner","client-appstream","client-appsync","client-apptest","client-arc-zonal-shift","client-artifact","client-athena","client-auditmanager","client-auto-scaling-plans","client-auto-scaling","client-b2bi","client-backup-gateway","client-backup","client-backupsearch","client-batch","client-bcm-data-exports","client-bcm-pricing-calculator","client-bedrock-agent-runtime","client-bedrock-agent","client-bedrock-data-automation-runtime","client-bedrock-data-automation","client-bedrock-runtime","client-bedrock","client-billing","client-billingconductor","client-braket","client-budgets","client-chatbot","client-chime-sdk-identity","client-chime-sdk-media-pipelines","client-chime-sdk-meetings","client-chime-sdk-messaging","client-chime-sdk-voice","client-chime","client-cleanrooms","client-cleanroomsml","client-cloud9","client-cloudcontrol","client-clouddirectory","client-cloudformation","client-cloudfront-keyvaluestore","client-cloudfront","client-cloudhsm-v2","client-cloudhsm","client-cloudsearch-domain","client-cloudsearch","client-cloudtrail-data","client-cloudtrail","client-cloudwatch-events","client-cloudwatch-logs","client-cloudwatch","client-codeartifact","client-codebuild","client-codecatalyst","client-codecommit","client-codeconnections","client-codedeploy","client-codeguru-reviewer","client-codeguru-security","client-codeguruprofiler","client-codepipeline","client-codestar-connections","client-codestar-notifications","client-cognito-identity-provider","client-cognito-identity","client-cognito-sync","client-comprehend","client-comprehendmedical","client-compute-optimizer","client-config-service","client-connect-contact-lens","client-connect","client-connectcampaigns","client-connectcampaignsv2","client-connectcases","client-connectparticipant","client-controlcatalog","client-kafkaconnect","client-kendra-ranking","client-kendra","client-keyspaces","client-keyspacesstreams","client-kinesis-analytics-v2","client-kinesis-analytics","client-kinesis-video-archived-media","client-kinesis-video-media","client-kinesis-video-signaling","client-kinesis-video-webrtc-storage","client-kinesis-video","client-kinesis","client-kms","client-lakeformation","client-lambda","client-launch-wizard","client-lex-model-building-service","client-lex-models-v2","client-lex-runtime-service","client-lex-runtime-v2","client-license-manager-linux-subscriptions","client-license-manager-user-subscriptions","client-license-manager","client-lightsail","client-location","client-lookoutequipment","client-lookoutmetrics","client-lookoutvision","client-m2","client-machine-learning","client-macie2","client-mailmanager","client-managedblockchain-query","client-managedblockchain","client-marketplace-agreement","client-marketplace-catalog","client-marketplace-commerce-analytics","client-marketplace-deployment","client-marketplace-entitlement-service","client-marketplace-metering","client-marketplace-reporting","client-mediaconnect","client-mediaconvert","client-medialive","client-mediapackage-vod","client-mediapackage","client-mediapackagev2","client-mediastore-data","client-mediastore","client-pricing","client-proton","client-qapps","client-qbusiness","client-qconnect","client-qldb-session","client-qldb","client-quicksight","client-ram","client-rbin","client-rds-data","client-rds","client-redshift-data","client-redshift-serverless","client-redshift","client-rekognition","client-rekognitionstreaming","client-repostspace","client-resiliencehub","client-resource-explorer-2","client-resource-groups-tagging-api","client-resource-groups","client-robomaker","client-rolesanywhere","client-route-53-domains","client-route-53","client-route53-recovery-cluster","client-route53-recovery-control-config","client-route53-recovery-readiness","client-route53profiles","client-route53resolver","client-rum","client-s3-control","client-s3","client-s3outposts","client-s3tables","client-sagemaker-a2i-runtime","client-sagemaker-edge","client-sagemaker-featurestore-runtime","client-sagemaker-geospatial","client-sagemaker-metrics","client-sagemaker-runtime","client-sagemaker","client-savingsplans","client-scheduler","client-schemas","client-secrets-manager","client-security-ir","client-securityhub","client-securitylake","client-kafkaconnect","client-kendra-ranking","client-kendra","client-keyspaces","client-keyspacesstreams","client-kinesis-analytics-v2","client-kinesis-analytics","client-kinesis-video-archived-media","client-kinesis-video-media","client-kinesis-video-signaling","client-kinesis-video-webrtc-storage","client-kinesis-video","client-kinesis","client-kms","client-lakeformation","client-lambda","client-launch-wizard","client-lex-model-building-service","client-lex-models-v2","client-lex-runtime-service","client-lex-runtime-v2","client-license-manager-linux-subscriptions","client-license-manager-user-subscriptions","client-license-manager","client-lightsail","client-location","client-lookoutequipment","client-lookoutmetrics","client-lookoutvision","client-m2","client-machine-learning","client-macie2","client-mailmanager","client-managedblockchain-query","client-managedblockchain","client-marketplace-agreement","client-marketplace-catalog","client-marketplace-commerce-analytics","client-marketplace-deployment","client-marketplace-entitlement-service","client-marketplace-metering","client-marketplace-reporting","client-mediaconnect","client-mediaconvert","client-medialive","client-mediapackage-vod","client-mediapackage","client-mediapackagev2","client-mediastore-data","client-mediastore","client-pricing","client-proton","client-qapps","client-qbusiness","client-qconnect","client-qldb-session","client-qldb","client-quicksight","client-ram","client-rbin","client-rds-data","client-rds","client-redshift-data","client-redshift-serverless","client-redshift","client-rekognition","client-rekognitionstreaming","client-repostspace","client-resiliencehub","client-resource-explorer-2","client-resource-groups-tagging-api","client-resource-groups","client-robomaker","client-rolesanywhere","client-route-53-domains","client-route-53","client-route53-recovery-cluster","client-route53-recovery-control-config","client-route53-recovery-readiness","client-route53profiles","client-route53resolver","client-rum","client-s3-control","client-s3","client-s3outposts","client-s3tables","client-sagemaker-a2i-runtime","client-sagemaker-edge","client-sagemaker-featurestore-runtime","client-sagemaker-geospatial","client-sagemaker-metrics","client-sagemaker-runtime","client-sagemaker","client-savingsplans","client-scheduler","client-schemas","client-secrets-manager","client-security-ir","client-securityhub","client-securitylake","client-pca-connector-scep","client-pcs","client-personalize-events","client-personalize-runtime","client-personalize","client-pi","client-pinpoint-email","client-pinpoint-sms-voice-v2","client-pinpoint-sms-voice","client-pinpoint","client-pipes","client-polly"];
const headers = {
    "Accept": "application/vnd.github.v3+json",
    "Authorization": `Bearer ${process.env.GITHUB_TOKEN}`,
    "X-GitHub-Api-Version": "2022-11-28",
    "User-Agent": "workflow-dispatcher",
    "Content-Type": "application/json"
};
async function make_a_req(repo){
    return new Promise((resolve, reject) => {
        const req = request({
            "hostname": 'api.github.com',
            "path": `/repos/AWS-SDK/${repo}/actions/workflows/build.yml/dispatches`,
            "port":443,
            "method": 'POST',
            "headers": headers
        }, (res) => {
            if (res.statusCode === 204) {
                resolve(`Workflow dispatched for ${repo}`);
            } else {
                reject(`Failed to dispatch workflow for ${repo}: ${res.statusCode}`);
            }
        });
        req.on("error", (err) => {
            reject(`Error dispatching workflow for ${repo}: ${err.message}`);
        });
        req.write(JSON.stringify({"ref": "main","inputs":{}}));
        req.end();
    });
}

for (const repo of repos) {
    try {
        const result = await make_a_req(repo);
        console.log(result);
    } catch (error) {
        console.error(error);
    }
}